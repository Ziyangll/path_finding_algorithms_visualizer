{"version":3,"sources":["components/Board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Board","props","useState","time","setTime","useEffect","interval","setInterval","clearInterval","width","height","start_x","start_y","end_x","end_y","board","i","row","j","push","map","x","v","toString","style","color","randomNumber","max","min","except","num","Math","floor","random","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAGe,SAASA,EAAMC,GAAyG,IAAD,EAE1GC,mBAAS,GAFiG,mBAE3HC,EAF2H,KAErHC,EAFqH,KAIlIC,qBAAU,WACV,IAAMC,EAAWC,aAAY,kBAAMH,EAAQD,EAAK,KAAI,KACpD,OAAO,WACHK,cAAcF,MAEf,CAACH,IAUJ,IARA,IAAIM,EAAQR,EAAMQ,MACdC,EAAST,EAAMS,OACfC,EAAUV,EAAMU,QAChBC,EAAUX,EAAMW,QAChBC,EAAQZ,EAAMY,MACdC,EAAQb,EAAMa,MAEdC,EAAQ,GACJC,EAAE,EAAGA,EAAIN,EAAQM,IAAK,CAE1B,IADA,IAAIC,EAAM,GACFC,EAAI,EAAGA,EAAIT,EAAOS,IAClBF,IAAML,GAAWO,IAAMN,EACvBK,EAAIE,KAAK,KAEJH,IAAMH,GAASK,IAAMJ,EAC1BG,EAAIE,KAAK,KAGTF,EAAIE,KAAK,KAGjBJ,EAAMI,KAAKF,GAEf,OACI,gCAEI,gCACCF,EAAMK,KAAI,SAACC,EAAEL,GACV,OAAO,6BACFK,EAAED,KAAI,SAACE,EAAEJ,GACN,MAAU,MAANI,EACO,6BAAuCA,GAA9BN,EAAEO,WAAaL,EAAEK,YAEtB,MAAND,EACE,oBAAIE,MAAO,CAACC,MAAO,WAAnB,SAAwEH,GAApCN,EAAEO,WAAa,IAAML,EAAEK,YAEvD,MAAND,EACE,oBAAIE,MAAO,CAACC,MAAO,WAAnB,SAAwEH,GAApCN,EAAEO,WAAa,IAAML,EAAEK,YAEvD,MAAND,EACE,oBAAIE,MAAO,CAACC,MAAO,WAAnB,SAAwEH,GAApCN,EAAEO,WAAa,IAAML,EAAEK,YAG3D,6BAA6CD,GAApCN,EAAEO,WAAa,IAAML,EAAEK,gBAfnCP,QAqBpB,4BAAIb,OC3ChB,SAASuB,EAAaC,EAAaC,EAAaC,GAC5C,IAAIC,EAAMC,KAAKC,MAAMD,KAAKE,UAAYN,EAAMC,EAAK,IAAMA,EACvD,OAAQE,IAAQD,EAAUH,EAAaC,EAAKC,EAAKC,GAAUC,EAGhDI,MAtBf,WACE,IAEIvB,EAAUoB,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MADjC,KAETpB,EAAUmB,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAHlC,KAIRnB,EAAQa,EAAa,EAAGhB,EAAUC,GAClCG,EAAQY,EAAa,EAAGjB,GAASG,GACrC,OACE,qBAAKuB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qCACA,cAACnC,EAAD,CAAOS,MAVD,GAUeC,OATd,GAS8BC,QAASA,EAASC,QAASA,EAASC,MAAOA,EAAOC,MAAOA,UCAvFsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f70fa626.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\n\n\nexport default function Board(props: {width: number, height: number, start_x: number, start_y: number, end_x: number, end_y: number}) {\n\n    const [time, setTime] = useState(0);\n\n    useEffect(() => {\n    const interval = setInterval(() => setTime(time+1), 1000);\n    return () => {\n        clearInterval(interval);\n    };\n    }, [time]);\n\n    let width = props.width;\n    let height = props.height;\n    let start_x = props.start_x;\n    let start_y = props.start_y;\n    let end_x = props.end_x;\n    let end_y = props.end_y;\n\n    let board = [];\n    for(let i=0; i < height; i++) {\n        let row = []\n        for(let j = 0; j < width; j++) {\n            if (i === start_x && j === start_y) {\n                row.push('S')\n            }\n            else if (i === end_x && j === end_y) {\n                row.push('E')\n            }\n            else {\n                row.push('O')\n            }\n        }\n        board.push(row)\n    };\n    return (\n        <div>\n\n            <table>\n            {board.map((x,i) => {\n                return <tr key={i}>\n                    {x.map((v,j) => {\n                        if (v === 'O') {\n                            return <th key={i.toString() + j.toString()}>{v}</th>\n                        }\n                        else if (v === 'S') {\n                            return <th style={{color: \"#ef4f4f\"}} key={i.toString() + ' ' + j.toString()}>{v}</th>\n                        }\n                        else if (v === 'E') {\n                            return <th style={{color: \"#11698e\"}} key={i.toString() + ' ' + j.toString()}>{v}</th>\n                        }\n                        else if (v === \"V\") {\n                            return <th style={{color: \"#e6e6e6\"}} key={i.toString() + ' ' + j.toString()}>{v}</th>\n                        }\n                        else {\n                            return <th key={i.toString() + ' ' + j.toString()}>{v}</th>\n                        }\n                    })}\n                </tr>\n            })}\n            </table>\n            <p>{time}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport Board from './components/Board'\nfunction App() {\n  let width = 16;\n  let height = 10\n  let start_x = Math.floor(Math.random() * Math.floor(height));\n  let start_y = Math.floor(Math.random() * Math.floor(width));\n  let end_x = randomNumber(0, height-1, start_x);\n  let end_y = randomNumber(0, width-1, start_y);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>BFS</h2>\n        <Board width={width} height={height} start_x={start_x} start_y={start_y} end_x={end_x} end_y={end_y}/>\n      </header>\n    </div>\n  );\n}\n\nfunction randomNumber(max: number, min: number, except: number): number {\n    let num = Math.floor(Math.random() * (max - min +1)) + min;\n    return (num === except) ? randomNumber(max, min, except) : num;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}